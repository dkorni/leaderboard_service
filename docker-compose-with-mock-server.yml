services:
  mongodb:
    image: mongo:latest
    ports:
      - "27017:27017"
  
  leaderboardservice-api-1:
    image: leaderboardservice.api
    depends_on:
      - mongodb
    build:
      context: .
      dockerfile: LeaderboardService.API/Dockerfile
    environment:
      - MONGODB_URI=mongodb://mongodb:27017
    expose:
      - "8080"
  
  leaderboardservice-api-2:
    image: leaderboardservice.api
    depends_on:
      - mongodb
    build:
      context: .
      dockerfile: LeaderboardService.API/Dockerfile
    environment:
      - MONGODB_URI=mongodb://mongodb:27017
    expose:
      - "8080"
  
  nginx:
    image: nginx
    depends_on:
      - leaderboardservice-api-1
      - leaderboardservice-api-2
    volumes:
      - "./nginx.conf:/etc/nginx/nginx.conf"
    ports:
      - 80:80

  seq-trucker:
    image: datalust/seq:latest
    container_name: seq-trucker
    environment:
      - ACCEPT_EULA=Y
    ports:
      - 5341:5341
      - 8080:80
        
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:latest
    hostname: kafka-broker-1
    container_name: kafka-broker-1
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      
  init-kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - kafka
    entrypoint: [ '/bin/sh', '-c' ]
    command: |
      "
      # blocks until kafka is reachable
      kafka-topics --bootstrap-server kafka:9092 --list
      
      echo -e 'Creating kafka topics'
      kafka-topics --bootstrap-server kafka:9092 --create --if-not-exists --topic leaderboard --replication-factor 1 --partitions 1
      
      echo -e 'Successfully created the following topics:'
      kafka-topics --bootstrap-server kafka:9092 --list
      "
      
  leaderboardservice-event-listener-1:
    image: leaderboardservice.eventhost
    depends_on:
      - init-kafka
      - mongodb
    build:
      context: .
      dockerfile: LeaderboardService.EventHost/Dockerfile
    environment:
      - BootstrapServers=kafka:9092
      - GroupId=leaderboard-service-listner
      - Topic=leaderboard
      - MONGODB_URI=mongodb://mongodb:27017
  
  mock-server:
    image: leaderboardservice.tests.mockgameserver
    build:
      context: .
      dockerfile: LeaderboardService.Tests.MockGameServer/Dockerfile
    environment:
      - BootstrapServers=kafka:9092
      - Topic=leaderboard
      - MinEventsPerSecond=5
      - MaxEventsPerSecond=10
      - MinTimeout=3000
      - MaxTimeout=5000